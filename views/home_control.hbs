<div class="container">
    <header class="masthead bg-white text-white text-center" style="padding-top: 7em;padding-bottom: 2em;">
        <section class="page-section portfolio" id="portfolio">
            <div class="container">
                <div class="row">

                    <div class="col-md-6 col-lg-4">
                        <div class="portfolio-item mx-auto ">
                            <div class="card text-center text-primary ">
                                <div class="card-header p-1">
                                    <span><i>Greenhouse status</i></span></br>
                                        <div class="btn-group">
                                            <button type="button" class="badge btn btn-primary btn-sm dropdown-toggle"
                                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                {{#if schedule.veg_phase}}
                                                <i class="fas fa-seedling"></i> Vegetative
                                                {{/if}}
                                                {{#if schedule.fruit_phase}}
                                                <span><i class="fas fa-seedling"></i> Flower
                                                    {{/if}}
                                            </button>
                                            <div class="dropdown-menu text-muted">
                                                <form class="p-2 was-validated text-center" method="POST"
                                                    action="/control/phase">
                                                    <i class="fas fa-seedling"></i> Phase
                                                    <div class="dropdown-divider"></div>
                                                    <div class="form-group text-center ">
                                                        <select required name="phase_id"
                                                            class="form-control form-control-sm" id="phaseSelector"
                                                            style="appearance: none;">
                                                            <option value="">Select phase</option>
                                                            <option value="1">Vegetative</option>
                                                            <option value="2">Flower</option>
                                                        </select>
                                                    </div>
                                                    <div class="dropdown-divider"></div>
                                                    <button type="submit "
                                                        class="btn btn-success btn-block btn-sm">Update</button>
                                                </form>
                                            </div>
                                        </div>

                                        <div class="btn-group">
                                            <button type="button" class="badge btn btn-primary btn-sm dropdown-toggle"
                                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="far fa-calendar-alt"></i>
                                                {{schedule.lamp_start}}:00 -
                                                {{schedule.lamp_stop}}:00
                                            </button>
                                            <div class="dropdown-menu dropdown-menu-right text-muted">
                                                <form class="p-2 was-validated text-center" method="POST"
                                                    action="/control/schedule">
                                                    <i class="fas fa-clock"></i> Schedule
                                                    <div class="dropdown-divider"></div>
                                                    <div class="form-group ">
                                                        <div class="form-group text-center ">
                                                            <select required name="lamp_start"
                                                                class="form-control form-control-sm" id="startHourInput"
                                                                style="appearance: none;">
                                                                <option value="">Start hour</option>
                                                                <option>1</option>
                                                                <option>2</option>
                                                                <option>3</option>
                                                                <option>4</option>
                                                                <option>5</option>
                                                                <option>6</option>
                                                                <option>7</option>
                                                                <option>8</option>
                                                                <option>9</option>
                                                                <option>10</option>
                                                                <option>11</option>
                                                                <option>12</option>
                                                                <option>13</option>
                                                                <option>14</option>
                                                                <option>15</option>
                                                                <option>16</option>
                                                                <option>17</option>
                                                                <option>18</option>
                                                                <option>19</option>
                                                                <option>20</option>
                                                                <option>21</option>
                                                                <option>22</option>
                                                                <option>23</option>
                                                            </select>
                                                        </div>
                                                        <div class="form-group text-center">
                                                            <select required name="lamp_stop"
                                                                class="form-control form-control-sm" id="stopHourInput"
                                                                style="appearance: none;">
                                                                <option value="">Stop hour</option>
                                                                <option>1</option>
                                                                <option>2</option>
                                                                <option>3</option>
                                                                <option>4</option>
                                                                <option>5</option>
                                                                <option>6</option>
                                                                <option>7</option>
                                                                <option>8</option>
                                                                <option>9</option>
                                                                <option>10</option>
                                                                <option>11</option>
                                                                <option>12</option>
                                                                <option>13</option>
                                                                <option>14</option>
                                                                <option>15</option>
                                                                <option>16</option>
                                                                <option>17</option>
                                                                <option>18</option>
                                                                <option>19</option>
                                                                <option>20</option>
                                                                <option>21</option>
                                                                <option>22</option>
                                                                <option>23</option>
                                                            </select>
                                                            <input type="hidden" value="{{schedule.id}}"
                                                                name="id"></input>
                                                        </div>
                                                    </div>
                                                    <div class="dropdown-divider"></div>
                                                    <button type="submit "
                                                        class="btn btn-success btn-block btn-sm">Update</button>
                                                </form>
                                            </div>
                                        </div>

                                </div>
                                <div class="card-body p-0">
                                    <div class="m-0">                                     
                                        <div class="container">
                                            <div class="GaugeMeter float-left" id="GaugeMeter_1"
                                                data-used="{{sensors.temperature}}" data-min="0" data-total="40"
                                                data-text="{{sensors.temperature}}&#8451" data-style="Arch"
                                                data-theme="Green-Gold-Red" data-label="Temperature"
                                                data-showvalue="10"></div>
                                            <div class="GaugeMeter float-right" id="GaugeMeter_2"
                                                data-used="{{sensors.humidity}}" data-min="0" data-total="100"
                                                data-text='{{sensors.humidity}}&#8274' data-style="Arch"
                                                data-theme="Green-Gold-Red" data-label="Humidity"></div>
                                            <div class="GaugeMeter float-right" id="GaugeMeter_3"
                                                data-used="{{sensors.soil_moisture}}" data-min="0" data-total="100"
                                                data-text='{{sensors.soil_moisture}}&#8274' data-style="Arch"
                                                data-theme="Green-Gold-Red" data-label="Soil Moisture"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="container p-2">
                                    <div class="container text-muted">
                                        <div class="custom-control custom-switch p-0">
                                            <label for="44" class="form-label float-left mb-0"><i
                                                    class="fas fa-fan"></i> Fan in: <span
                                                    id="fanInValue">{{sensors.fan_in}}</span>%</label>
                                            <input type="range" id="44" value="{{sensors.fan_in}}"
                                                class="form-range w-100 sensor" min="0" max="100" step="5" disabled>
                                        </div>
                                        <div class="custom-control custom-switch p-0">
                                            <label for="45" class="form-label float-left mb-0"><i
                                                    class="fas fa-fan"></i> Fan out: <span
                                                    id="fanOutValue">{{sensors.fan_out}}</span>%</label>
                                            <input type="range" id="45" value="{{sensors.fan_out}}"
                                                class="form-range w-100 sensor" min="0" max="100" step="5" disabled>
                                        </div>
                                        <div class="dropdown-divider"></div>

                                        <div class="custom-control custom-switch">
                                            <input type="checkbox" disabled class="custom-control-input sensor" id="3"
                                                onclick="switchHandler(this)" {{#unless
                                                sensors.pomp_off}}checked{{/unless}} value="">
                                            <label class="custom-control-label float-left" for="3">
                                                <i class="fas fa-shower"></i>
                                                <span>Water pomp</span></label>
                                        </div>
                                        <div class="custom-control custom-switch">
                                            <input type="checkbox" disabled class="custom-control-input sensor" id="5"
                                                onclick="switchHandler(this)" {{#unless
                                                sensors.veg_lamp_off}}checked{{/unless}} value="">
                                            <label class="custom-control-label float-left" for="5">
                                                <i class="far fa-lightbulb"></i>
                                                <span>LED Veg level</span></label>
                                        </div>

                                        <div class="custom-control custom-switch">
                                            <input type="checkbox" disabled class="custom-control-input sensor" id="6"
                                                onclick="switchHandler(this)" {{#unless
                                                sensors.fruit_lamp_off}}checked{{/unless}} value="">
                                            <label class="custom-control-label float-left" for="6">
                                                <i class="far fa-lightbulb"></i>
                                                <span>LED Fruit level</span></label>
                                        </div>
                                        <div class="dropdown-divider"></div>

                                        <div class="custom-control custom-switch">
                                            <input type="checkbox" class="custom-control-input" id="0"
                                                onclick="switchToggle(this)" value="">
                                            <label class="custom-control-label " for="0">
                                                <span><i class="fas fa-lock" id="lock-badge"></i></span>
                                                <span></span></label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6 col-lg-4">
                        <div class="portfolio-item mx-auto">
                            <div class="card text-center text-primary">
                                <div class="card-header p-0">
                                    <span><i>Temperature</i>
                                    </span></br>
                                    <input type="text"
                                        class="border-0 bg-primary rounded histCalendar mb-2 text-center text-light "
                                        id="dailyTempHist" readonly="true" value="{{tempHistory.date}}"
                                        onclick="calendarHandler(this)" /></br>
                                    <span class="mb-2 p-1 rounded"
                                        style="border:1px solid red ;background-color:rgba(255,226,0,0.19);color:red;display: none;"></span>
                                </div>
                                <div class="card-body">
                                    <div class="m-0">
                                        <div class="container">

                                        </div>
                                    </div>
                                </div>
                                <div class="container p-2" style=" height:40vh; width:100%">
                                    <canvas id="temperatureHistoryChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="portfolio-item mx-auto">
                            <div class="card text-center text-primary">
                                <div class="card-header p-0">
                                    <span><i>Humidity</i></span></br>
                                    <input type="text"
                                        class="border-0 bg-primary rounded histCalendar mb-2 text-center text-light "
                                        id="dailyHumHist" readonly="true" value="{{tempHistory.date}}"
                                        onclick="calendarHandler(this)" /></br>
                                    <span class="p-1 rounded"
                                        style="border:1px solid red ;background-color:rgba(255,226,0,0.19);color:red;display: none;"></span>
                                </div>
                                <div class="card-body">
                                    <div class="m-0">
                                        <div class="container">

                                        </div>
                                    </div>
                                </div>
                                <div class="container p-2" style=" height:40vh; width:100%">
                                    <canvas id="humidityHistoryChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="portfolio-item mx-auto">
                            <div class="card text-center text-primary">
                                <div class="card-header p-0">
                                    <span><i>Soil moisture</i>
                                    </span></br>
                                    <input type="text"
                                        class="border-0 bg-primary rounded histCalendar mb-2 text-center text-light "
                                        id="dailySoilHist" readonly="true" value="{{tempHistory.date}}"
                                        onclick="calendarHandler(this)" /></br>
                                    <span class="mb-2 p-1 rounded"
                                        style="border:1px solid red ;background-color:rgba(255,226,0,0.19);color:red;display: none;"></span>
                                </div>
                                <div class="card-body">
                                    <div class="m-0">
                                        <div class="container">

                                        </div>
                                    </div>
                                </div>
                                <div class="container p-2" style=" height:40vh; width:100%">
                                    <canvas id="soilMoistureHistoryChart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-4">
                        <div class="portfolio-item mx-auto ">
                            <div class="card text-center text-primary ">
                                <div class="card-header p-0">
                                    Relays
                                </div>
                                <div class="card-body">
                                    <table class="table table-sm table-responsive table-striped">
                                        <thead>
                                            <tr>
                                                <th scope="col">Hour</th>
                                                <th scope="col">Fan In</th>
                                                <th scope="col">Fan Out</th>
                                                <th scope="col">Pomp</th>
                                                <th scope="col">VegLamp</th>
                                                <th scope="col">FruitLamp</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {{#each history}}

                                            <tr>
                                                <th scope="row"><small class="text-sm">{{this.modified}}:00</small></th>
                                                <td><small class="text-sm">{{this.fan_in}} %</small></td>
                                                 <td><small class="text-sm">{{this.fan_out}} %</small></td>
                                                <td>{{#if this.pomp_off}} <i
                                                        class="fas fa-stop-circle text-danger"></i>{{else}} <i
                                                        class="fas fa-play-circle text-success"></i> {{/if}}</td>
                                                <td>{{#if this.veg_lamp_off}} <i
                                                        class="fas fa-stop-circle text-danger"></i>{{else}} <i
                                                        class="fas fa-play-circle text-success"></i> {{/if}}</td>
                                                <td>{{#if this.fruit_lamp_off}} <i
                                                        class="fas fa-stop-circle text-danger"></i>{{else}} <i
                                                        class="fas fa-play-circle text-success"></i> {{/if}}</td>
                                            </tr>
                                            {{/each}}
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
        </section>
        <div id = 'color_picker'></div>
    </header>
</div>
<script src="/js/GaugeMeter.js"></script>
<script>
    $(document).ready(function () {
        $(".GaugeMeter").gaugeMeter();
    });

    
    $('.dropdown-menu select').click(function (e) {
        e.stopPropagation(); //This will prevent the event from bubbling up and close the dropdown when you type/click on text boxes.
    });

    var calendarId;

    var sliderFanIn = document.getElementById("44");
    var sliderFanOut = document.getElementById("45");
    var spanFanIn = document.getElementById("fanInValue");

    var spanFanOut = document.getElementById("fanOutValue");

    // Update the current slider value (each time you drag the slider handle)
    sliderFanIn.oninput = function () {
        var value = this.value;
        var fanId = this.id;
        spanFanIn.innerHTML = value;
    }

    // Update the current slider value (each time you drag the slider handle)
    sliderFanOut.oninput = function () {
        var value = this.value;
        var fanId = this.id;
        spanFanOut.innerHTML = value;
    }

    sliderFanIn.onpointerup = function () {
        startFan(this)
    }

    sliderFanOut.onpointerup = function () {
        startFan(this)
    }

    function startFan(elem) {
        blockControl(elem);

        $.ajax({
            method: "POST",
            url: "/control/fan",
            data: { "id": elem.id, "value": parseInt((255 / 100) * elem.value) }
        }).done(function () {
            unblockControl(elem)
        })
    }

    function switchToggle(elem) {

        let lock = document.getElementById("lock-badge");
        if (elem.checked) {
            lock.className = "fas fa-unlock"
        } else {
            lock.className = "fas fa-lock"
        }


        blockControl(elem);
        var buttons = document.getElementsByClassName("sensor")

        for (let k = 0; k < buttons.length; k++) {

            if (buttons[k].disabled) {

                buttons[k].removeAttribute("disabled");

            } else {

                buttons[k].setAttribute("disabled", "true");
            }
        }
        unblockControl(elem);
    }
    function switchHandler(elem) {

        blockControl(elem);

        $.ajax({
            method: "POST",
            url: "/control",
            data: { "relayId": elem.id, "status": elem.checked, "switch": elem.value }
        }).done(function () {
            unblockControl(elem)
        })
    }

    function updateHistoryChart(chart, dataset) {
        chart.data.labels = dataset.history.sensorLabels

        if (dataset.temp) {
            chart.data.datasets[0].data = dataset.history.tempData
        }
        else if (dataset.hum) {
            chart.data.datasets[0].data = dataset.history.humidityData
        }
        else if (dataset.soil) {
            chart.data.datasets[0].data = dataset.history.soilMoistureData
        }
        chart.update();
    }

    function calendarHandler(elem) {
        calendarId = elem
    }

    $(function () {
        $('.histCalendar').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            minYear: 2019,
            maxYear: parseInt(moment().format('YYYY'), 10),
            opens: "center"
        }, function (start, end, label) {


            let date = new Date(start._d)
            let filteredTime = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;

            blockControl(calendarId);

            $.ajax({
                method: "POST",
                url: "/control/history",
                data: { "date": filteredTime, "calendarId": calendarId.id }
            }).done(function (newChart) {


                if (newChart.found) {

                    if (newChart.calendar == "dailyTempHist") {
                        newChart["temp"] = true;
                        updateHistoryChart(monthlyTempChart, newChart)
                    }
                    else if (newChart.calendar == "dailyHumHist") {
                        newChart["hum"] = true;
                        updateHistoryChart(monthlyHumChart, newChart)
                    }
                    else if (newChart.calendar == "dailySoilHist") {
                        newChart["soil"] = true;
                        updateHistoryChart(monthlySoilChart, newChart)
                    }
                } else {

                    $($(`#${newChart.calendar}`).parent().children()[4]).html(newChart.message);
                    $($(`#${newChart.calendar}`).parent().children()[4]).show();

                    setTimeout(() => {
                        $($(`#${newChart.calendar}`).parent().children()[4]).hide('slow');
                    }, 1500)
                }
                unblockControl(calendarId)
            })
        });
    });
</script>
<script src="/js/chart.js"></script>
<script>

    var ctxTempGraph = document.getElementById('temperatureHistoryChart');
    var monthlyTempChart = new Chart(ctxTempGraph, {
        type: 'bar',
        data: {
            labels: "{{tempHistory.sensorLabels}}".split(","),
            datasets: [{
                label: "Temperature",
                data: [{{ tempHistory.tempData }}],
            backgroundColor: 'rgba(255,226,0,0.19)',
            borderColor: 'rgb(255,238,0)',
            borderWidth: 1
        }]
    },
        options: {
        maintainAspectRatio: false,
        scales: {
            yAxes: [{
                offset: true,
                ticks: {
                    beginAtZero: true,
                    minRotation: 0,
                    maxRotation: 50,
                    mirror: false,
                    padding: 0,
                    reverse: false,
                    display: true,
                    autoSkip: false,
                    autoSkipPadding: 0,
                    labelOffset: 0
                },
                gridLines: {
                    display: false
                }
            }],
            xAxes: [{
                gridLines: {
                    display: false
                }
            }]
        }
    }
    });

    var ctxHumGraph = document.getElementById('humidityHistoryChart');
    var monthlyHumChart = new Chart(ctxHumGraph, {
        type: 'bar',
        data: {
            labels: "{{tempHistory.sensorLabels}}".split(","),
            datasets: [{
                label: "Himidity",
                data: [{{ tempHistory.humidityData }}],
            backgroundColor: 'rgba(0,188,0,0.19)',
            borderColor: 'rgb(0,188,0)',
            borderWidth: 1
        }]
    },
        options: {
        maintainAspectRatio: false,
        scales: {
            yAxes: [{
                offset: true,
                ticks: {
                    beginAtZero: true,
                    minRotation: 0,
                    maxRotation: 50,
                    mirror: false,
                    padding: 0,
                    reverse: false,
                    display: true,
                    autoSkip: false,
                    autoSkipPadding: 0,
                    labelOffset: 0
                },
                gridLines: {
                    display: false
                }
            }],
            xAxes: [{
                gridLines: {
                    display: false
                }
            }]
        }
    }
    });

    var ctxTempGraph = document.getElementById('soilMoistureHistoryChart');
    var monthlySoilChart = new Chart(ctxTempGraph, {
        type: 'bar',
        data: {
            labels: "{{tempHistory.sensorLabels}}".split(","),
            datasets: [{
                label: "Soil Moisture",
                data: [{{ tempHistory.soilMoistureData }}],
            backgroundColor: 'rgba(70, 248, 252,0.19)',
            borderColor: 'rgb(70, 248, 252)',
            borderWidth: 1
        }]
    },
        options: {
        maintainAspectRatio: false,
        scales: {
            yAxes: [{
                offset: true,
                ticks: {
                    beginAtZero: true,
                    minRotation: 0,
                    maxRotation: 50,
                    mirror: false,
                    padding: 0,
                    reverse: false,
                    display: true,
                    autoSkip: false,
                    autoSkipPadding: 0,
                    labelOffset: 0
                },
                gridLines: {
                    display: false
                }
            }],
            xAxes: [{
                gridLines: {
                    display: false
                }
            }]
        }
    }
    });
</script>