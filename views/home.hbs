
<div style="padding: 2% ;">
    <div class="card text-center" style="margin-bottom: 5px;" name="{{{pieData.month}}}" value="{{{pieData.year}}}">
        <div class="card-header">
            <div class="input-group">
                <button class="btn btn-info dropdown-toggle btn-block" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    {{{pieData.month}}} {{{pieData.year}}}
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="width: 100%;text-align: center;">
                    {{#each progressData.labels}}
                        <a class="dropdown-item" onclick="updateChart(this.text)">{{this}}</a>
                    {{/each}}
                </div>
            </div>
        </div>

        <div class="card-body">
            <canvas id="pieChart"></canvas></br>
            <canvas id="extendedOutcomeChart"></canvas>
        </div>
        <div class="card-footer">
            <form  id ="formData" method="GET" action="/edit" >
                <input id="monthName" type="hidden" class="form-control" name="month_name" value="{{{pieData.month}}}">
                <input type="hidden" class="form-control" name="year" value="{{{pieData.year}}}">
                <button type="submit" class="btn btn-primary  btn-block " >Edit</button>
            </form>
        </div>
    </div>

    <div class="card" style="width: 100%">
        <canvas id="pieChart2"></canvas>
        <div class="card-body">
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.4.1.js"></script>
    <script src="/js/chart.js"></script>
    <script src="/js/chartUpdateController.js"></script>
    <script>

        var ctxPie = document.getElementById('pieChart');
        var pieChart = new Chart(ctxPie, {
            type: 'doughnut',
            data: {
                labels: "{{pieData.labels}}".split(","),
                datasets: [{
                    label: '# of Income',
                    data: [{{pieData.data}}],
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgb(28,192,43)',
                        'rgba(255, 99, 132, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                title: {
                    display: false,
                    text: "{{{incomeList.month_name}}} {{{incomeList.year}}}"
                },
                tooltips: {
                    enabled: true
                }
            }
        });

        var ctxExtendedOutcome = document.getElementById('extendedOutcomeChart');
        var extendedChart = new Chart(ctxExtendedOutcome, {
            type: 'horizontalBar',
            data: {
                labels: "{{outcomeData.labels}}".split(","),
                datasets: [{
                    label: "Outcome details",
                    data: [{{outcomeData.data}}],
                    backgroundColor:'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        var ctxGraph = document.getElementById('pieChart2');
        var monthlyChart = new Chart(ctxGraph, {
            type: 'line',
            data: {
                labels: "{{progressData.labels}}".split(",").reverse(),
                datasets: [{
                    label: `Income evolution ${new Date().getFullYear()}`,
                    backgroundColor:'rgba(0,192,116,0.2)',
                    borderColor:'rgb(28,192,43)',
                    borderWidth: 1,
                    data: [{{progressData.data}}]
                }]
            },
            options: {}
        });
    </script>



</div>

